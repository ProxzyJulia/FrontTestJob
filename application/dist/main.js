(()=>{"use strict";var e,t,o,n,r={3:e=>{e.exports=function({mustBeMetaMask:e=!1,silent:t=!1,timeout:o=3e3}={}){!function(){if("boolean"!=typeof e)throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!=typeof t)throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!=typeof o)throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}();let n=!1;return new Promise((r=>{function a(){if(n)return;n=!0,window.removeEventListener("ethereum#initialized",a);const{ethereum:o}=window;if(!o||e&&!o.isMetaMask){const n=e&&o?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";!t&&console.error("@metamask/detect-provider:",n),r(null)}else r(o)}window.ethereum?a():(window.addEventListener("ethereum#initialized",a,{once:!0}),setTimeout((()=>{a()}),o))}))}},138:(e,t,o)=>{o.a(e,(async(e,t)=>{try{var n=o(3),r=o.n(n);const a=document.querySelector(".enableEthereumButton"),i=document.querySelector(".showAccount"),s=document.getElementById("kitty"),c=await r()();if(c){async function w(){const e=(await window.ethereum.request({method:"eth_requestAccounts"}).catch((e=>{4001===e.code?console.log("Please connect to MetaMask."):console.error(e)})))[0];i.innerHTML="Your account name is: "+e}u(c),s.style.display="none",a.style.display="inline",a.addEventListener("click",(()=>{w()}))}else console.log("Please install MetaMask!"),s.style.display="none",i.innerHTML="Are you sure you have MetaMask browser extension?";function u(e){e!==window.ethereum&&(console.error("Do you have multiple wallets installed?"),s.style.display="none",i.innerHTML="Sorry, multiple wallets aren't supported.")}function l(e){window.location.reload()}await window.ethereum.request({method:"eth_chainId"}),window.ethereum.on("chainChanged",l);let d=null;function m(e){0===e.length?console.log("Please connect to MetaMask."):e[0]!==d&&(d=e[0],i.innerHTML=d)}window.ethereum.request({method:"eth_accounts"}).then(m).catch((e=>{console.error(e)})),window.ethereum.on("accountsChanged",m),t()}catch(p){t(p)}}),1)}},a={};function i(e){var t=a[e];if(void 0!==t)return t.exports;var o=a[e]={exports:{}};return r[e](o,o.exports,i),o.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",o="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",n=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},i.a=(r,a,i)=>{var s;i&&((s=[]).d=-1);var c,u,l,d=new Set,m=r.exports,w=new Promise(((e,t)=>{l=t,u=e}));w[t]=m,w[e]=e=>(s&&e(s),d.forEach(e),w.catch((e=>{}))),r.exports=w,a((r=>{var a;c=(r=>r.map((r=>{if(null!==r&&"object"==typeof r){if(r[e])return r;if(r.then){var a=[];a.d=0,r.then((e=>{i[t]=e,n(a)}),(e=>{i[o]=e,n(a)}));var i={};return i[e]=e=>e(a),i}}var s={};return s[e]=e=>{},s[t]=r,s})))(r);var i=()=>c.map((e=>{if(e[o])throw e[o];return e[t]})),u=new Promise((t=>{(a=()=>t(i)).r=0;var o=e=>e!==s&&!d.has(e)&&(d.add(e),e&&!e.d&&(a.r++,e.push(a)));c.map((t=>t[e](o)))}));return a.r?u:i()}),(e=>(e?l(w[o]=e):u(m),n(s)))),s&&s.d<0&&(s.d=0)},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var o in t)i.o(t,o)&&!i.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i(138)})();